		// if order.PaymentMethod == "point" {
		// 	// Pengembalian stock
		// 	for _, orderItem := range orderItems {
		// 		productEntity := &entity.Product{}
		// 		productEntityStockHistory := &entity.ProductStockHistory{}
		// 		product, errFindProduct := service.ProductRepositoryInterface.FindProductById(tx, orderItem.IdProduct)
		// 		exceptions.PanicIfErrorWithRollback(errFindProduct, requestId, []string{"product not found"}, service.Logger, tx)

		// 		productEntityStockHistory.IdProduct = orderItem.IdProduct
		// 		productEntityStockHistory.TxDate = time.Now()
		// 		productEntityStockHistory.StockOpname = product.Stock
		// 		productEntityStockHistory.StockInQty = orderItem.Qty
		// 		productEntityStockHistory.StockFinal = product.Stock + orderItem.Qty
		// 		productEntityStockHistory.Description = "Pengembalian " + order.NumberOrder
		// 		productEntityStockHistory.CreatedAt = time.Now()
		// 		_, errAddProductStockHistory := service.ProductStockHistoryRepositoryInterface.AddProductStockHistory(tx, *productEntityStockHistory)
		// 		exceptions.PanicIfErrorWithRollback(errAddProductStockHistory, requestId, []string{"add stock history error"}, service.Logger, tx)

		// 		productEntity.Stock = product.Stock + orderItem.Qty
		// 		_, errUpdateProductStock := service.ProductRepositoryInterface.UpdateProductStock(tx, orderItem.IdProduct, *productEntity)
		// 		exceptions.PanicIfErrorWithRollback(errUpdateProductStock, requestId, []string{"update stock error"}, service.Logger, tx)
		// 	}
		// }

		// waktuSekarang := time.Now()
		// waktu := order.PaymentDueDate.Time
		// fmt.Println("waktu sekarang = ", waktuSekarang)
		// fmt.Println("batas waktu pembayaran = ", waktu)
		// if waktuSekarang.After(waktu) {
		// 	fmt.Println("yes")
		// }
		// fmt.Println("waktu = ", waktu)